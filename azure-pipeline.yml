# azure-pipelines.yml
# âœ… This pipeline triggers on pushes to dev, staging, or main.
# âœ… Each stage runs only when its corresponding branch is the source.
# âœ… Includes debug info so you can see which branch triggered the run.

trigger:
  branches:
    include:
      - dev
      - staging
      - main

# This pool is your self-hosted agent
pool:
  name: SandBoxAgent

stages:
# ============================
# ðŸ”¹ Development Stage
# ============================
- stage: Dev
  displayName: "Deploy to Dev"
  # âœ… Use succeeded() to ensure stage runs only when pipeline runs successfully
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
  jobs:
    - deployment: DeployToDev
      displayName: "Deploy to Development Environment"
      environment: dev
      strategy:
        runOnce:
          deploy:
            steps:
              - script: |
                  echo "ðŸ”¹ Branch: $(Build.SourceBranch)"
                  echo "ðŸ”¹ Build Reason: $(Build.Reason)"
                  echo "Deploying to Dev environment..."
                displayName: "Deployment step"

# ============================
# ðŸ”¸ Staging Stage
# ============================
- stage: Staging
  displayName: "Deploy to Staging"
  dependsOn: []   # âœ… ensures this stage can run independently
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/staging'))
  jobs:
    - deployment: DeployToStaging
      displayName: "Deploy to Staging Environment"
      environment: staging
      strategy:
        runOnce:
          deploy:
            steps:
              - script: |
                  echo "ðŸ”¸ Branch: $(Build.SourceBranch)"
                  echo "ðŸ”¸ Build Reason: $(Build.Reason)"
                  echo "Deploying to Staging environment..."
                displayName: "Deployment step"

# ============================
# ðŸš€ Production Stage
# ============================
- stage: Prod
  displayName: "Deploy to Production"
  dependsOn: []   # âœ… allows it to trigger directly on its branch
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
    - deployment: DeployToProd
      displayName: "Deploy to Production Environment"
      environment: production
      strategy:
        runOnce:
          deploy:
            steps:
              - script: |
                  echo "ðŸš€ Branch: $(Build.SourceBranch)"
                  echo "ðŸš€ Build Reason: $(Build.Reason)"
                  echo "Deploying to Production environment..."
                displayName: "Deployment step"
